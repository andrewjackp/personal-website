.email-input-form {
	display: flex;
	flex-direction: row;
	
	width: 100%;
	max-width: 400px;
	
	font-size: 0.9rem;
	line-height: 0.7;

	container-name: email;
	container-type: inline-size;
	
	email-input {
		flex-grow: 1; /* fill up all available space */

		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 5px;

		background-color: var(--blue);
		color: white;
		
		border-radius: var(--corners);

		
		.icon {
			padding-left: 0.8em;
         padding-right: 0.8em;
		}
		
		input {
			width: 100%; 
			flex-grow: 1;

			font: inherit;
			border: 0; /* remove default */
			
			padding: 0.8em 1rem;
			padding-right: 0;
			
			background: var(--darkblue);
			color: var(--white);
			
			text-overflow: ellipsis;

			border-top: 0.7px solid var(--grey);
			border-bottom: 0.7px solid var(--grey);
			border-left: 0.7px solid var(--grey);
			background: var(--white);
			border-top-left-radius: 5px;
         border-bottom-left-radius: 5px;

			&:focus {
				outline: 0; /* remove focus - but move it to focus within */
			}
		}
		&:focus-within {
			box-shadow: 0 0 0 3px rgb(255 255 255 / 0.3);
			/* just an example / but needs to be clear */
		}
	}
	
	button {
		all: initial;
		font: inherit;
		
		color: var(--white);

		padding: 0 0.8em;
		border-radius: var(--corners);

		&:focus {
			box-shadow: 0 0 0 3px rgb(0 0 0 / 0.2);
		}

		span.text {
			display: block;
		}
		span.arrow {
			display: none;
		}
	}
	
	@container email (width < 300px) {
		.icon {
			display: none;
		}

		button {
			span.text {
				display: none; /* you'd want to keep this for screen-readers somehow though */
			}
			span.arrow {
				display: block;
			}
		}
	}
}